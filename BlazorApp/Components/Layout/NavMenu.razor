@rendermode InteractiveServer
@inject CartService CartService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorApp</a>

        <input type="checkbox" title="Navigation menu" class="navbar-toggler" />
        <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
            <nav class="nav flex-column flex-md-row">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                        Home
                    </NavLink>
                </div>


                <!--käyttää NavMenu.razorissa olevia css luokkia ja sen semmosia,
                 luodakseen nappeja jotka vievät eri sivuille.
                 aria-hidden piilottaa esim luokan nimen(bi bi-menu-button) näytön lukijalta,
                  että se lukisi vain mitä halutaan(Menu Display, tässä tilanteessa).

                  Selkeyden vuoksi kommentoin pois menudisplayn-->

                <!--div class="nav-item px-3">
                    <NavLink class="nav-link" href="/menudisplay">
                        Menu Display
                    </NavLink>
                </div-->
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/admin">
                        Admin Dashboard
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/menu">
                        Menu
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/cart">
                        <i class="bi bi-cart-fill"></i>
                        <span class="ms-2">Cart (@cartCount)</span>
                    </NavLink>
                </div>
            </nav>
        </div>
    </div>
</div>
@code {
    private int cartCount = 0;

    protected override void OnInitialized()
    {
        cartCount = CartService.GetCartItems().Count;
        CartService.OnCartChanged += UpdateCartCount;
    }

    private void UpdateCartCount()
    {
        cartCount = CartService.GetCartItems().Count;
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        CartService.OnCartChanged -= UpdateCartCount;
    }
}